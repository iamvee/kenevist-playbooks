---
- name: Install git
  shell: apt install git -y


- name: Check containers exists
  stat: 
    path: "{{ frigg_repo_dir}}"
  register: frigg_dir


- name: Stop containers 
  shell: docker-compose -f "{{ build_path }}/{{ item }}/docker-compose.yml" down
  ignore_errors: true
  when: frigg_dir.stat.exists 
  with_items:
    - bind
    - redis
    - gitlab
    - registry
    - traefik


- name: Prune containers and networks
  shell: docker {{ item }} prune -f 
  ignore_errors: true
  with_items:
    - container
    - network 

- name: Create a network
  shell: docker network create {{ item }}
  with_items:
    - backend
    - web

- name: Clone {{ git_repo_src }}  {{ git_repo_version }}" on remote hosts
  git:
    repo: "{{ git_repo_src }}"
    dest: "{{ git_repo_dest }}"
    version: "{{ git_repo_version }}"


- name: Copy bind data
  shell: cp -R "{{ git_repo_dest }}/bind/"  "{{ build_path }}/bind/"



- name: fetch jinja template 
  run_once: true
  fetch:
    src: "{{ template_repo_dest }}/{{ item }}/docker-compose.ymlj2"
    dest: "/tmp/{{ build_path }}/{{ item }}/docker-compose.yml.j2.temp"
    flat: yes
    fail_on_missing: yes
  with_items:
    - bind
    - redis
    - gitlab
    - registry
    - traefik


- name: template remote hosts
  template:
    src: "/tmp/{{ build_path }}/{{ item }}/docker-compose.yml.j2.temp"    
    dest: "{{ build_path }}/{{ item }}/docker-compose.yml"
    owner: root
    group: root
    mode: 0600
  with_items:
    - bind
    - redis
    - gitlab
    - registry
    - traefik


- name: run docker-compose files
  shell: docker-compose -f "{{ build_path }}/{{ item }}/docker-compose.yml" up --build -d 
  with_items:
    - bind
    - redis
    - registry
    - traefik


- name: run gitlab docker-compose gitlab
  shell: cd "{{ build_path }}/gitlab" && docker-compose up --build -d
